#!/bin/bash
# Este script hace algo útil

# Variables
USERsv1="usuario"
PASSsv1="usuario"
PASSsv2="melon"
HOST_IP0="192.168.238.150"
HOST_IP="192.168.239.231"

# Actualización de repositorios
echo "$PASSsv1" | sudo -S apt update
echo "$PASSsv1" | sudo -S apt upgrade -y

# Instalar sshpass si no está instalado
echo "$PASSsv1" | sudo -S apt install sshpass -y

# Conectarse a la Máquina Server directamente sin necesidad de confirmar la fingerprint
sshpass -p "$PASSsv1" ssh -o StrictHostKeyChecking=no "$USERsv1@$HOST_IP0" << EOF
        echo "$PASSsv1" | sudo -S bash -c 'echo "root:$PASSsv2" | chpasswd'
        
        # Cambiar el hostname de la máquina remota
        echo "$PASSsv1" | sudo -S hostnamectl set-hostname Server
EOF


# Codigo para darle constraseña al usuario Root para poder aplicar el ansible posteriormente.
echo "$PASSsv1" | sudo -S chpasswd <<< "root:$PASSsv2"

# Creación de backup del netplan actual y aplicación del nuevo netplan
sudo cp /etc/netplan/50-cloud-init.yaml /etc/netplan/50-cloud-init.yaml.bkup 
echo "$PASSsv1" | sudo -S rm /etc/netplan/50-cloud-init.yaml
echo "$PASSsv1" | sudo -S touch /etc/netplan/50-cloud-init.yaml
echo "$PASSsv1" | sudo -S tee /etc/netplan/50-cloud-init.yaml <<EOF
network:
    ethernets:
        enp1s0:
            dhcp4: false
            addresses:
            - $HOST_IP/22
            routes:
                - to: default
                  via: 192.168.236.1
            nameservers:
                addresses: [192.168.236.1]
    version: 2
EOF
netplan apply'

#Esta parte de codigo es de prueba para comprobar si funcionan los espacios
echo "network:
    ethernets:
        enp1s0:
            dhcp4: false
            addresses:
            - $HOST_IP/22
            routes:
                - to: default
                  via: 192.168.236.1
            nameservers:
                addresses: [192.168.236.1]
    version: 2" > /home/prueba_ecologica.txt
